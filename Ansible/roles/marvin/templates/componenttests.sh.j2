#!/bin/bash

#Copyright 2016 ShapeBlue
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

set +e # stop erroneous failures reported by Jenkins
LOGDIR=/marvin/MarvinLogs
rm -f /marvin/tests/component/*.pyc
rm -f /marvin/tests/component/maint/*.pyc
rm -f /usr/lib/python2.7/site-packages/marvin/*pyc
rm -f /usr/lib/python2.7/site-packages/marvin/config/*pyc
rm -f /usr/lib/python2.7/site-packages/marvin/lib/*pyc


NUMTESTS1=`find /marvin/tests/component/test*.py | wc -l`
NUMTESTS2=`find /marvin/tests/component/maint/test*.py | wc -l`
NUMTESTS=$((NUMTESTS1+NUMTESTS2))
counter=1
for file in /marvin/tests/component/test_*.py; do
echo -e "\e[92m ---->  Starting $(basename $file) on {{ hostvars[groups['marvin_host'][0]]['ansible_ssh_host'] }} in: {{ env_name_clean }}\e[0m"
{% if use_hipchat %}hipchat --action sendNotification --room "Marvin Notifications" --messageFormat "html" --colour "gray" --message "Starting <b>$(basename $file)</b> on {{ hostvars[groups['marvin_host'][0]]['ansible_ssh_host'] }} in: <br><b>{{ env_name_clean }}</b> - test ($counter of $NUMTESTS)"{% endif %}

  #  nosetests --with-marvin --marvin-config=/marvin/{{ env_name_clean }}-advanced-cfg --hypervisor={{ env_hv }} -a tags=advanced $file
  nosetests --with-xunit --xunit-file=$LOGDIR/$(basename $file).xml --with-marvin --marvin-config=/marvin/{{ env_name_clean }}-advanced-cfg  --hypervisor=vmware -a tags=advanced $file

  LASTUPDATEDIR=`ls $LOGDIR/*/ -td | head -n 1`
  if [[ -s ${LASTUPDATEDIR}failed_plus_exceptions.txt ]]; then
    echo -e "\e[92m ---->  test $(basename $file) in {{ env_name_clean }} looks to have errors\e[0m"
    {% if use_hipchat %}hipchat --action sendNotification --room "Marvin Notifications" --messageFormat "html" --colour "gray" --message "test $(basename $file) in {{ env_name_clean }} looks to have <span style="color:#FF0000">errors</span>"{% endif %}

  else
    echo -e "\e[92m ---->  test $(basename $file) in {{ env_name_clean }} looks OK\e[0m"
    {% if use_hipchat %}hipchat --action sendNotification --room "Marvin Notifications" --messageFormat "html" --colour "gray" --message "test $(basename $file) in {{ env_name_clean }} looks <span style="color:#00FF40">OK</span>"{% endif %}

  fi
  counter=$((counter+1))
done

for file in /marvin/tests/component/maint/test_*.py; do
  echo "Starting $(basename $file) on {{ hostvars[groups['marvin_host'][0]]['ansible_ssh_host'] }} in: {{ env_name_clean }}"
{% if use_hipchat %}hipchat --action sendNotification --room "Marvin Notifications" --messageFormat "html" --colour "gray" --message "Starting <b>$(basename $file)</b> on {{ hostvars[groups['marvin_host'][0]]['ansible_ssh_host'] }} in: <br><b>{{ env_name_clean }}</b> - test ($counter of $NUMTESTS)"{% endif %}

  # nosetests --with-marvin --marvin-config=/marvin/{{ env_name_clean }}-advanced-cfg --hypervisor={{ env_hv }} -a tags=advanced $file
  nosetests --with-xunit --xunit-file=$LOGDIR/$(basename $file).xml --with-marvin --marvin-config=/marvin/{{ env_name_clean }}-advanced-cfg --hypervisor={{ env_hv }} -a tags=advanced $file

  LASTUPDATEDIR=`ls $LOGDIR/*/ -td | head -n 1`
  if [[ -s ${LASTUPDATEDIR}failed_plus_exceptions.txt ]]; then
    echo "test $(basename $file) in {{ env_name_clean }} looks to have errors"
    {% if use_hipchat %}hipchat --action sendNotification --room "Marvin Notifications" --messageFormat "html" --colour "gray" --message "test $(basename $file) in {{ env_name_clean }} looks to have <span style="color:#FF0000">errors</span>"{% endif %}

  else
    echo "test $(basename $file) in {{ env_name_clean }} looks OK"
    {% if use_hipchat %}hipchat --action sendNotification --room "Marvin Notifications" --messageFormat "html" --colour "gray" --message "test $(basename $file) in {{ env_name_clean }} looks <span style="color:#00FF40">OK</span>"{% endif %}

  fi
  counter=$((counter+1))
done

GOOD=0
BAD=0
for dir in $LOGDIR/*/; do
  if [[ -s ${dir}failed_plus_exceptions.txt ]]; then
    BAD=$((BAD+1))
  else
    GOOD=$((GOOD+1))
  fi
done

echo "Test completed. $GOOD look ok, $BAD have errors"
{% if use_hipchat %}hipchat --action sendNotification --room "Marvin Notifications" --messageFormat "html" --message "Component tests for <b>{{ env_name_clean }}</b> completed. <br><b>$GOOD</b> look ok, <b>$BAD</b> have errors" --colour "green" --notify{% endif %}

echo "Test completed. $GOOD look ok, $BAD have errors" > /marvin/componenttest-summary.txt
echo "" >> /marvin/componenttest-summary.txt
python /marvin/tools/xunit-reader.py $LOGDIR/ >> /marvin/componenttest-summary.txt
cat /marvin/componenttest-summary.txt
