---

#Copyright 2016 ShapeBlue
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.


- debug: msg="Connecting to Marvin host {{ ansible_ssh_host }}"
  tags:
    - marvin
    - marvin_cfg
    - marvin_install

- name: wait for ssh
  local_action: wait_for port=22 host="{{ ansible_ssh_host }}" timeout=300 connect_timeout=5
  tags:
    - marvin
    - marvin_cfg
    - marvin_install

- name: CentOS 7 hostname fixup
  file: path=/etc/hostname state=absent
  tags:
    - marvin
    - marvin_cfg

- name: Install Dev Tools Group
  yum: name="@Development tools" state=installed
  tags:
    - marvin
    - marvin_cfg
    - marvin_install

- name: Ensure EPEL is available (centOS7)
  yum: name="{{ epel7 }}" state=present
  ignore_errors: true
  tags:
    - marvin
    - marvin_install

- name: switch to baseurl as mirrors seem unreliable
  shell: sed -i -e 's|mirrorlist=https:|#mirrorlist=http:|g' -e 's|#baseurl=http|baseurl=http|g' /etc/yum.repos.d/epel.repo
  ignore_errors: true
  tags:
    - marvin
    - marvin_install

- name: Install Other Dependancies
  yum: name={{ item }} state=installed
  with_items:
  - 'http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm'
  - zlib-devel
  - bzip2-devel
  - openssl-devel
  - xz-libs
  - wget
  - sqlite
  - sqlite-devel
  - python-paramiko
  - python-setuptools
  - python-devel
  - mysql-devel
  - zlib-devel
  - bzip2-devel
  - openssl-devel
  - ncurses-devel
  - libxslt-devel
  - libffi-devel
  - openssh-askpass
  - jq
  - mariadb
  - git
  - screen
  - sshpass
  - at
  tags:
    - marvin
    - marvin_install

- name: Install mysql-connector-python
  yum: name=mysql-connector-python state=installed
  tags:
    - marvin
    - marvin_install

- name: Install pip
  easy_install: name=pip
  tags:
    - marvin
    - marvin_install

- name: Update pip and setuptools
  pip: name={{ item }} extra_args='--upgrade'
  with_items:
  - pip
  - setuptools
  tags:
    - marvin
    - marvin_install

- name: install pip security components
  pip: name={{ item }}
  with_items:
  - '"requests[security]"'
  - pyopenssl
  - pyasn1
  - wget
  - texttable
  tags:
    - marvin
    - marvin_install

- name: ensure atd is running to schedule jobs
  service: name=atd state=started enabled=yes

- name: Set repo to install PR tests from
  template: src=cloudstack.repo.j2 dest=/etc/yum.repos.d/cloudstack.repo
  when: ("{{ marvin_tests_source }}" == "pr")
  tags:
    - marvin
    - marvin_cfg

- name: Get Marvin files
  get_url: url='https://builds.apache.org/job/cloudstack-marvin/lastSuccessfulBuild/artifact/tools/marvin/dist/*zip*/dist.zip' dest=/tmp
  when: ("{{ marvin_tests_source }}" == "github")
  tags:
    - marvin

- name: unpack Marvin files
  unarchive: src=/tmp/dist.zip dest=/tmp copy=no
  when: ("{{ marvin_tests_source }}" == "github")
  tags:
    - marvin

- name: Rename Marvin files
  shell: mv /tmp/dist/Marvin-*.tar.gz /tmp/dist/Marvin.tar.gz
  when: ("{{ marvin_tests_source }}" == "github")
  tags:
    - marvin

- name: Install Marvin
  pip: name='file:///tmp/dist/Marvin.tar.gz'
  when: ("{{ marvin_tests_source }}" == "github")
  tags:
    - marvin

- name: Install Marvin packages from PR
  yum: name=cloudstack-marvin state=present
  when: ("{{ marvin_tests_source }}" == "pr")
  tags:
    - marvin
    - marvin_cfg

- name: Install nose
  easy_install: name=nose
  tags:
    - marvin

- name: ensure /root/.ssh dir exists
  file: path=/root/.ssh state=directory

- name: Install SSH key for ESXi and KVM hosts
  copy: src=id_rsa dest=/root/.ssh/id_rsa mode=0600

- name: retrieve environment data
  env_db_manage: DBHOST={{ env_db_ip }} DBUSER={{ env_db_user }} DBPASS={{ env_db_password }} DBNAME={{ env_db_name }} ENV_UUID={{ env_uuid }} ENV_NAME={{ env_name_clean }} ENV_ZONETYPE={{ env_zonetype }} ENV_ACTION=retrieve
  tags:
    - marvin
    - marvin_cfg

- name: clear marvin dirs if exists
  file: path="{{ item }}" state=absent
  with_items:
    - "/marvin"
  tags:
    - marvin
    - marvin_cfg

- name: create Marvin dirs if required
  file: path="{{ item }}" state=directory
  with_items:
    - "/marvin"
    - "/marvin/tools"
    - "/marvin/error"
    - "/marvin/pass"
  tags:
    - marvin
    - marvin_cfg

- name: Retrieve cloud SSH keys from mgmt server
  shell: "sshpass -p '{{ hostvars[groups['primary_cs_manager'][0]]['ansible_ssh_pass'] }}' scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@{{ hostvars[groups['primary_cs_manager'][0]]['ansible_ssh_host'] }}:/usr/share/cloudstack-common/scripts/vm/systemvm/id_rsa.cloud ~/.ssh/id_rsa.cloud"
  tags:
    - marvin
    - marvin_cfg
  ignore_errors: yes

- name: If using tests from master (on GitHub) check if repo already cloned
  stat: path=/tmp/cloudstack/marvin
  register: marvintests_dir
  when: ("{{ marvin_tests_source }}" == "github")
  tags:
    - marvin
    - marvin_cfg

- name: If updating (pulling) from master (on GitHub)
  shell: "cd /tmp/marvin && git pull"
  when: ("{{ marvin_tests_source }}" == "github") and (marvintests_dir.stat.exists == True)
  tags:
    - marvin
    - marvin_cfg

- name: clone master repo
  git: repo="{{ marvin_tests_github_source }}" dest=/tmp/marvin depth=1 accept_hostkey=true
  when: ("{{ marvin_tests_source }}" == "github") and (marvintests_dir.stat.exists == False)
  tags:
    - marvin
    - marvin_cfg

- name: copy tests
  command: cp -r /tmp/marvin/test/integration /marvin/tests
  when: ("{{ marvin_tests_source }}" == "github")
  tags:
    - marvin
    - marvin_cfg

- name: Ensure integration test packages are installed
  yum: name=cloudstack-integration-tests state=present
  when: ("{{ marvin_tests_source }}" == "pr")
  tags:
    - marvin
    - marvin_cfg

- name: copy tests
  command: cp -r /usr/share/cloudstack-integration-tests /marvin/tests
  when: ("{{ marvin_tests_source }}" == "pr")
  tags:
    - marvin
    - marvin_cfg

- name: remove extraneous directories and files
  command: rm -f /marvin/*
  when: ("{{ marvin_tests_source }}" == "github")
  ignore_errors: true
  tags:
    - marvin
    - marvin_cfg

- name: create mavin cfg file
  template: src=advanced-cfg.j2 dest="/marvin/{{ env_name_clean }}-advanced-cfg"
  tags:
    - marvin
    - marvin_cfg

- name: copy travis xunit parser
  copy: src=xunit-reader.py dest=/marvin/tools/xunit-reader.py
  tags:
    - marvin
    - marvin_cfg

- name: remove orginal test_data files
  file: path="{{ item }}" state=absent
  with_items:
    - "/usr/lib/python2.7/site-packages/marvin/config/test_data.pyc"
    - "/usr/lib/python2.7/site-packages/marvin/config/test_data.py"
  tags:
    - marvin
    - marvin_cfg

- name: create templated test_data.py
  template: src=test_data.py.j2 dest=/marvin/test_data.py
  tags:
    - marvin
    - marvin_cfg

- name: create symlink to test_data.py
  file: src=/marvin/test_data.py dest=/usr/lib/python2.7/site-packages/marvin/config/test_data.py state=link mode=0644
  tags:
    - marvin
    - marvin_cfg

- name: create smoketest file
  template: src="smoketests.sh.j2" dest="/marvin/smoketests.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg

- name: create componenttest file
  template: src="componenttests.sh.j2" dest="/marvin/componenttests.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg

- name: create marvintest file
  template: src="marvintest.sh.j2" dest="/marvin/marvintest.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg
    - mavintest

- name: add test result collation script
  copy: src="collate_results.sh" dest="/marvin/collate_results.sh" mode=0755
  tags:
    - marvin
    - marvin_cfg
    - mavintest

- include: ./fix_tests.yml
