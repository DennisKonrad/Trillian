---

#Copyright 2016 ShapeBlue
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.


- name: Install basic utilities and tools
  apt:
    pkg: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - openntpd
    - openssh-client
    - telnet
    - tcpdump
    - traceroute
    - iptables-persistent
    - qemu-kvm
    - parted

- name: set apt repo to local
  template:
    src: "{{ inventory_dir }}/templates/{{ item }}.j2"
    dest: "/etc/apt/{{item}}"
  with_items:
    - "sources.list"

- name: Add specified repository into sources list.
  apt_repository:
    repo: 'deb {{ baseurl_kvm }} /'
    state: present

- apt_key:
    url: "{{ repohost }}/release.asc"
    state: present

- apt_key:
    keyserver: keyserver.ubuntu.com
    id: 86F44E2A

- name: Add openjdk-ppa repository into sources list.
  apt_repository:
    repo: 'deb http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main'
    state: present
  when: ansible_distribution_release == "trusty"

- name: Add openjdk-ppa repository into sources list.
  apt_repository:
    repo: 'deb http://ppa.launchpad.net/openjdk-r/ppa/ubuntu xenial main'
    state: present
  when: ansible_distribution_release == "xenial"

- name: Add 18.04 repos
  apt_repository:
    repo: {{ item }}
    state: present
  with_items:
    - "deb http://archive.ubuntu.com/ubuntu bionic main universe restricted multiverse"
    - "deb http://security.ubuntu.com/ubuntu/ bionic-security restricted multiverse main universe"
    - "deb http://archive.ubuntu.com/ubuntu bionic-updates restricted multiverse main universe"
    - "deb http://archive.canonical.com/ bionic partner"
  when: ansible_distribution_release == "bionic"

- name: Run the equivalent of "apt-get update" as a separate step
  apt:
    update_cache: yes

- set_fact: java_ver="{{ kvm_java_ver }}"
- set_fact: java_path="{{ kvm_java_path }}"

- debug: msg="Java version required is {{ java_ver }}"

- name: Ensure correct open-jdk is installed
  apt:
    pkg: "{{ kvm_java_path }}"
    state: latest
    update_cache: yes

- include: ./add_local_storage.yml
  when: use_local_storage
  tags:
    - kvm

- name: Added network instances file
  template: src=interfaces.j2 dest="/etc/network/interfaces"
  when: (ansible_distribution_release == "precise") or
        (ansible_distribution_release == "trusty" ) or
        (ansible_distribution_release == "xenial")

- name: Added network instances file
  template: src=netplan.j2 dest="/etc/netplan/50-cloud-init.yaml"
  when: ansible_distribution_release == "bionic"

- name: UFW firerules
  shell: "ufw allow proto tcp from any to any port {{ item }}"
  with_items:
    - "22"
    - "1798"
    - "16509"
    - "5900:6100"
    - "49152:49216"

- name: Installs cloudstack-agent
  apt: pkg=cloudstack-agent state=installed update_cache=true

- name: Updated /etc/libvirt/libvirtd.conf
  lineinfile: dest=/etc/libvirt/libvirtd.conf regexp="#listen_tls = 0" line="listen_tls = 0"

- name: Updated /etc/libvirt/libvirtd.conf
  lineinfile: dest=/etc/libvirt/libvirtd.conf regexp='#listen_tcp = 1' line='listen_tcp = 1'

- name: Updated /etc/libvirt/libvirtd.conf
  lineinfile: dest=/etc/libvirt/libvirtd.conf regexp='#tcp_port= "16509"' line='tcp_port = "16509"'

- name: Updated /etc/libvirt/libvirtd.conf
  lineinfile: dest=/etc/libvirt/libvirtd.conf regexp='#auth_tcp = "sasl"' line='auth_tcp = "none"'

- name: Updated /etc/libvirt/libvirtd.conf
  lineinfile: dest=/etc/libvirt/libvirtd.conf regexp='#mdns_adv = 1' line='mdns_adv = 0'

- name: Updated /etc/libvirt/libvirtd.conf
  lineinfile:
    dest: "/etc/libvirt/libvirtd.conf"
    line: 'log_outputs="1:file:/var/log/libvirt/libvirtd.log"'

- name: Updated /etc/default/libvirt-bin
  lineinfile:
    dest: "/etc/default/libvirt-bin"
    regexp: 'libvirtd_opts="-d"'
    line: 'libvirtd_opts="-d -l"'
  when: ansible_distribution_release == "trusty"

- name: Updated /etc/default/libvirt-bin
  lineinfile:
    dest: "/etc/default/libvirt-bin"
    regexp: '.*libvirtd_opts=*'
    line: 'libvirtd_opts="-l"'
  when: ansible_distribution_release == "xenial"

- name: Update /etc/default/libvirtd
  lineinfile:
    dest: "/etc/default/libvirtd"
    regexp: '.*libvirtd_opts=*'
    line: 'libvirtd_opts="-l"'
  when: ansible_distribution_release == "bionic"

#- name: Updated /etc/init/libvirt-bin.conf
#  lineinfile: dest=/etc/init/libvirt-bin.conf regexp='env libvirtd_opts="-d"' line='env libvirtd_opts="-d -l"'

- name: update /etc/libvirt/qemu.conf
  lineinfile: dest=/etc/libvirt/qemu.conf regexp='#vnc_listen = "0.0.0.0"' line='vnc_listen = "0.0.0.0"'

- name: Synlink to disable
  file: src=/etc/apparmor.d/usr.sbin.libvirtd dest=/etc/apparmor.d/disable/usr.sbin.libvirtd state=link

- name: Synlink to disable
  file: src=/etc/apparmor.d/usr.lib.libvirt.virt-aa-helper dest=/etc/apparmor.d/disable/usr.lib.libvirt.virt-aa-helper state=link

- name: Apparmor parser libvirt
  shell: apparmor_parser -R /etc/apparmor.d/usr.sbin.libvirtd
  ignore_errors: yes

- name: Apparmor parser libvirt helper
  shell: apparmor_parser -R /etc/apparmor.d/usr.lib.libvirt.virt-aa-helper
  ignore_errors: yes

- name: restart machine (Ubuntu networking restart bug #1301015)
  command: shutdown -r now "Ansible updates triggered"
  async: 0
  poll: 0
  ignore_errors: true
