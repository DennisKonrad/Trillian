---
- name: determine number of db hosts
  set_fact: num_db_hosts="{{ groups['mysql_hosts'] | length }}"
  tags:
    - extra_steps

- name: set mysql_master_ip
  set_fact: mysql_master_ip={{ (num_db_hosts | int == 0) | ternary("{{ hostvars[groups['primary_cs_manager'][0]]['ansible_ssh_host'] }}","{{ hostvars[groups['mysql_master_host'][0]]['ansible_ssh_host'] }}") }}
  tags:
    - extra_steps

- name: copy upgrade script to mgmt.
  copy:
    src: "{{ inventory_dir }}/roles/cloudstack-manager/files/update_db_410_to_411.sql"
    dest: /tmp/update_db_410_to_411.sql
  when: upgrade_cloudstack_ver == "cs411" and env_version == "cs410"
  tags:
    - extra_steps

- name: run missing sql commands
  shell: "mysql -h'{{ mysql_master_ip }}' -u'root' -p{{ mysql_root_password }} < /tmp/update_db_410_to_411.sql"
  when: upgrade_cloudstack_ver == "cs411" and env_version == "cs410"
  tags:
    - extra_steps

- name: preset some global settings
  acs_mysql_update: DBHOST="{{ mysql_master_ip }}" DBUSER="cloud" DBPASS={{ mysql_cloud_password }} MYSQL_STATEMENT="UPDATE cloud.configuration SET value='8096' WHERE name='integration.api.port';"

- name: reload cloudstack.unit
  command: systemctl daemon-reload
  when: upgrade_cloudstack_ver == "cs411" and env_version == "cs410"
  tags:
    - extra_steps